//
// Copyright (c) 2020 Alphi Technology Corporation, Inc.  All Rights Reserved
//
// You are hereby granted a copyright license to use, modify and
// distribute this SOFTWARE so long as the entire notice is retained
// without alteration in any modified and/or redistributed versions,
// and that such modified versions are clearly identified as such.
// No licenses are granted by implication, estopple or otherwise under
// any patents or trademarks of Alphi Technology Corporation (Alphi).
//
// The SOFTWARE is provided on an "AS IS" basis and without warranty,
// to the maximum extent permitted by applicable law.
//
// ALPHI DISCLAIMS ALL WARRANTIES WHETHER EXPRESS OR IMPLIED, INCLUDING
// WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE
// AND ANY WARRANTY AGAINST INFRINGEMENT WITH REGARD TO THE SOFTWARE
// (INCLUDING ANY MODIFIED VERSIONS THEREOF) AND ANY ACCOMPANYING
// WRITTEN MATERIAL.
//
// To the maximum extent permitted by applicable law, IN NO EVENT SHALL
// ALPHI BE LIABLE FOR ANY DAMAGE WHATSOEVER (INCLUDING WITHOUT LIMITATION,
// DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
// BUSINESS INFORMATION, OR OTHER PECUNIARY LOSS) ARISING FROM THE USE
// OR INABILITY TO USE THE SOFTWARE.  GMS assumes no responsibility for
// for the maintenance or support of the SOFTWARE
//
/** @file AlphiErrorCodes.h
* @brief Description of the Error Codes used by the libraries
*/

// Maintenance Log
//---------------------------------------------------------------------
// v1.0		7/23/2020	phf	Written
//---------------------------------------------------------------------
#pragma once

#include "AlphiDll.h" 

typedef int PCIeMini_status;

// Error Codes
#define ERRCODE_NO_ERROR							0
#define ERRCODE_SUCCESS							0
#define ERRCODE_INTERNAL_ERROR						1
#define ERRCODE_INVALID_BOARD_NUM					ERRCODE_INTERNAL_ERROR + 1				
#define ERRCODE_BOARD_NOT_PRESENT					ERRCODE_INTERNAL_ERROR + 1
#define ERRCODE_INVALID_HANDLE						ERRCODE_INVALID_BOARD_NUM + 1
#define ERRCODE_INVALID_CHANNEL_NUM					ERRCODE_INVALID_HANDLE + 1
#define ERRCODE_INVALID_SELF_TEST_ENABLE_VAL		ERRCODE_INVALID_CHANNEL_NUM + 1
#define ERRCODE_INVALID_VALUE						ERRCODE_INVALID_SELF_TEST_ENABLE_VAL + 1
#define ERRCODE_INPUT_MODE							ERRCODE_INVALID_VALUE + 1
#define ERRCODE_OUTPUT_MODE							ERRCODE_INPUT_MODE + 1
#define ERRCODE_INVALID_LOGIC_SEL					ERRCODE_OUTPUT_MODE + 1
#define ERRCODE_INVALID_STROBE_MODE					ERRCODE_INVALID_LOGIC_SEL + 1
#define ERRCODE_INVALID_GROUP						ERRCODE_INVALID_STROBE_MODE + 1
#define ERRCODE_INVALID_FREQUENCY					ERRCODE_INVALID_GROUP + 1
#define ERRCODE_INVALID_INPUT_MODE					ERRCODE_INVALID_FREQUENCY + 1
#define ERRCODE_INVALID_MASK_VALUE					ERRCODE_INVALID_INPUT_MODE + 1
#define ERRCODE_INVALID_MODE						ERRCODE_INVALID_MASK_VALUE + 1
#define ERRCODE_INVALID_SELF_TEST_DATA				ERRCODE_INVALID_MODE + 1	
#define ERRCODE_SELF_TEST_DISABLE					ERRCODE_INVALID_SELF_TEST_DATA + 1
#define ERRCODE_FAILED_SELF_TEST					ERRCODE_SELF_TEST_DISABLE + 1
#define ERRCODE_INVALID_TIME_BOUNCE_VAL				ERRCODE_FAILED_SELF_TEST + 1	
#define ERRCODE_INT_ALREADY_ENABLED					ERRCODE_INVALID_TIME_BOUNCE_VAL + 1
#define ERRCODE_INT_NOT_ENABLED						ERRCODE_INT_ALREADY_ENABLED + 1
#define ERRCODE_INVALID_TRANRECVSTS					ERRCODE_INT_NOT_ENABLED + 1
#define ERRCODE_INVALID_TRANSNUMBER					ERRCODE_INVALID_TRANRECVSTS + 1
#define ERRCODE_INVALID_RECVNUMBER 					ERRCODE_INVALID_TRANSNUMBER + 1
#define ERRCODE_INVALID_RECVSTATUS					ERRCODE_INVALID_RECVNUMBER+1
#define ERRCODE_INVALID_TRPAIR 						ERRCODE_INVALID_RECVSTATUS + 1
#define ERRCODE_INVALID_TRANSSTATUS					ERRCODE_INVALID_TRPAIR + 1
#define ERRCODE_INVALID_LABELNUMBER					ERRCODE_INVALID_TRANSSTATUS + 1
#define ERRCODE_INVALID_SDI							ERRCODE_INVALID_LABELNUMBER + 1
#define ERRCODE_INVALID_PARITY						ERRCODE_INVALID_SDI + 1
#define ERRCODE_INVALID_DATARATE					ERRCODE_INVALID_PARITY + 1
#define ERRCODE_INVALID_DATALENGTH					ERRCODE_INVALID_DATARATE + 1
#define ERRCODE_INVALID_SSM							ERRCODE_INVALID_DATALENGTH + 1
#define ERRCODE_INVALID_EMTINTSTS					ERRCODE_INVALID_SSM + 1
#define ERRCODE_INVALID_HFINTSTS					ERRCODE_INVALID_EMTINTSTS + 1
#define ERRCODE_INVALID_FINTSTS						ERRCODE_INVALID_HFINTSTS + 1
#define ERRCODE_INVALID_COMMAND						ERRCODE_INVALID_FINTSTS + 1
#define ERRCODE_RX_UNDERFLOW						ERRCODE_INVALID_COMMAND + 1
#define ERRCODE_TX_OVERFLOW							ERRCODE_RX_UNDERFLOW + 1
#define ERRCODE_BUSY								ERRCODE_TX_OVERFLOW + 1
#define ERRCODE_TIMEOUT								ERRCODE_BUSY + 1
#define ERRCODE_INVALID_ALIGNMENT					ERRCODE_TIMEOUT + 1

DLL char* getAlphiErrorMsg(PCIeMini_status errCode);

